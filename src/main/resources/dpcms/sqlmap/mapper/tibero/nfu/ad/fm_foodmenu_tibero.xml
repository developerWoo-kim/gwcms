<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fm_foodmenu">

	<!-- 식단 관리 홈페이지목록 리스트 sql -->
	<sql id="selectFoodSmView">
		SELECT IT.INSTT_CODE
	          ,IT.INSTT_NM
	          ,IT.INSTT_TY
	          ,SM.SYS_ID
			  ,SM.SYS_NM
			   ,ROW_NUMBER() OVER(ORDER BY IT.INSTT_CODE, IT.INSTT_LEVEL DESC) AS RSN
			  FROM TAP_IM_INSTT_MANAGE IT, TAP_SM_SYS_MANAGE SM
			  WHERE IT.INSTT_CODE = SM.INSTT_CODE
			  AND SM.SYS_STTUS = 'O'

			<if test='@egovframework.MybatisUtils@isEmpty(author) || author != "master"'>
	         AND SM.SYS_ID NOT IN ('apple')
	        </if>

	        <if test="@egovframework.MybatisUtils@isNotEmpty(mberId)">
		      AND SM.SYS_ID IN (
					SELECT SYS_ID
					  FROM TAP_AU_AUTHOR_MBER
					 WHERE MBER_ID = #{mberId}
						   AND SYS_ID != 'apple'
					   AND AUTHOR_CODE IN (1,2)
	        	)
		     </if>

	        <if test="@egovframework.MybatisUtils@isNotEmpty(insttCode)">
		     AND   ( IT.INSTT_CODE =  #{insttCode}
	                    OR  IT.UPPER_INSTT_CODE = #{upperInsttCode}
	                    OR  IT.BSIS_INSTT_CODE = #{bsisInsttCode}
	               	)
	         </if>

		     <if test="@egovframework.MybatisUtils@isNotEmpty(insttGrad)">
		     AND   ( IT.INSTT_GRAD IS NULL
		     		 <if test="@egovframework.MybatisUtils@isNotEmpty(dtnt)">
		                OR IT.INSTT_GRAD = #{dtnt}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(elesch)">
		                OR IT.INSTT_GRAD = #{elesch}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(mskul)">
		                OR IT.INSTT_GRAD = #{mskul}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(hgschl)">
		                OR IT.INSTT_GRAD = #{hgschl}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(kndrgr)">
		                OR IT.INSTT_GRAD = #{kndrgr}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(spcl)">
		                OR IT.INSTT_GRAD = #{spcl}
		             </if>
		           )
		     </if>

		     <if test="@egovframework.MybatisUtils@isNotEmpty(sysTy)">
		      AND   SM.SYS_TY = #{sysTy}
		     </if>

		     <if test="@egovframework.MybatisUtils@isNotEmpty(srchTxt)">
		       AND  (
       				 SM.SYS_NM LIKE '%'|| #{srchTxt} ||'%'
              	  OR SM.SYS_TY LIKE '%'|| #{srchTxt} ||'%'
		       )
		    </if>

<!-- 			 ORDER BY   IT.INSTT_CODE, IT.INSTT_LEVEL DESC -->
	</sql>

	<!-- 식단 관리 홈페이지목록 리스트 -->
	<select id="selectFoodSmView" parameterType="map" resultType="egovMap">
		<include refid="selectFoodSmView"/>
	</select>

	<!-- 식단 관리 홈페이지목록 리스트 페이징 -->
	<select id="selectFoodSmViewPaging" parameterType="map" resultType="egovMap">
		SELECT
    		PL.*
    	FROM (
        	SELECT
        		PO.*
			FROM (
	    		<include refid="selectFoodSmView" />
				) PO
		) PL
		WHERE
		<![CDATA[
			rsn <= #{maxSn}
			AND rsn > #{minSn}
		]]>
	</select>

	<!-- 식단 관리 홈페이지목록 리스트 페이징 카운트 -->
	<select id="selectFoodSmViewPagingCount" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
			FROM TAP_IM_INSTT_MANAGE IT, TAP_SM_SYS_MANAGE SM
			  WHERE IT.INSTT_CODE = SM.INSTT_CODE
			  AND SM.SYS_STTUS = 'O'

			<if test='@egovframework.MybatisUtils@isEmpty(author) || author != "master"'>
	         AND SM.SYS_ID NOT IN ('apple')
	        </if>

	        <if test="@egovframework.MybatisUtils@isNotEmpty(insttCode)">
		     AND   ( IT.INSTT_CODE =  #{insttCode}
                    OR  IT.UPPER_INSTT_CODE = #{upperInsttCode}
                    OR  IT.BSIS_INSTT_CODE = #{bsisInsttCode}
	               	)
	         </if>

		     <if test="@egovframework.MybatisUtils@isNotEmpty(insttGrad)">
		     AND   ( IT.INSTT_GRAD IS NULL
		     		 <if test="@egovframework.MybatisUtils@isNotEmpty(dtnt)">
		                OR IT.INSTT_GRAD = #{dtnt}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(elesch)">
		                OR IT.INSTT_GRAD = #{elesch}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(mskul)">
		                OR IT.INSTT_GRAD = #{mskul}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(hgschl)">
		                OR IT.INSTT_GRAD = #{hgschl}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(kndrgr)">
		                OR IT.INSTT_GRAD = #{kndrgr}
		             </if>
		             <if test="@egovframework.MybatisUtils@isNotEmpty(spcl)">
		                OR IT.INSTT_GRAD = #{spcl}
		             </if>
		           )
		     </if>

	        <if test="@egovframework.MybatisUtils@isNotEmpty(mberId)">
		      AND SM.SYS_ID IN (
					SELECT SYS_ID
					  FROM TAP_AU_AUTHOR_MBER
					 WHERE MBER_ID = #{mberId}
						   AND SYS_ID != 'apple'
					   AND AUTHOR_CODE IN (1,2)
	        	)
		     </if>

		     <if test="@egovframework.MybatisUtils@isNotEmpty(sysTy)">
		      AND   SM.SYS_TY = #{sysTy}
		     </if>

		     <if test="@egovframework.MybatisUtils@isNotEmpty(srchTxt)">
		       AND  (
       				 SM.SYS_NM LIKE '%'|| #{srchTxt} ||'%'
              	  OR SM.SYS_TY LIKE '%'|| #{srchTxt} ||'%'
		       )
		    </if>
	</select>

	<!-- 식당관리 S -->
	<!-- 식당관리 시스템  리스트 (페이징 전체 카운트) -->
	<select id="selectFoodRestSmListPagingCount" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TAP_IM_INSTT_MANAGE IT
			, TAP_SM_SYS_MANAGE SM
		WHERE IT.INSTT_CODE = SM.INSTT_CODE
			AND SM.SYS_STTUS = 'O'
			<if test='@egovframework.MybatisUtils@isEmpty(author) || author != "master"'>
				AND SM.SYS_ID NOT IN ('apple')
			</if>
			<if test="@egovframework.MybatisUtils@isNotEmpty(insttCode)">
				AND (
					IT.INSTT_CODE =  #{insttCode}
					OR IT.UPPER_INSTT_CODE = #{upperInsttCode}
					OR IT.BSIS_INSTT_CODE = #{bsisInsttCode}
				)
			</if>
			<if test="@egovframework.MybatisUtils@isNotEmpty(srchSmTxt)">
				AND (
					SM.SYS_NM LIKE '%'|| #{srchSmTxt} || '%'
					OR SM.SYS_TY LIKE '%'|| #{srchSmTxt} || '%')
				)
			</if>
	</select>

	<!-- 식당관리 시스템  페이징 리스트  -->
	<select id="selectFoodRestSmListPaging" parameterType="map" resultType="egovMap">
		SELECT
			PL.*
		FROM (
			SELECT
				PO.*
				, ROWNUM AS RSN
			FROM (
				SELECT
					IT.INSTT_CODE
					, IT.INSTT_NM
					, IT.INSTT_TY
					, SM.SYS_ID
					, SM.SYS_NM
					, SM.SYS_TY
					, (SELECT COUNT(*) FROM TAD_FM_FOODMENU_REST WHERE SYS_ID = SM.SYS_ID AND USE_AT = 'Y') AS REST_CNT
				FROM
					TAP_IM_INSTT_MANAGE IT
					, TAP_SM_SYS_MANAGE SM
				WHERE IT.INSTT_CODE = SM.INSTT_CODE
					AND SM.SYS_STTUS = 'O'
					<if test='@egovframework.MybatisUtils@isEmpty(author) || author != "master"'>
						AND SM.SYS_ID NOT IN ('apple')
					</if>
					<if test="@egovframework.MybatisUtils@isNotEmpty(insttCode)">
						AND (
							IT.INSTT_CODE =  #{insttCode}
							OR IT.UPPER_INSTT_CODE = #{upperInsttCode}
							OR IT.BSIS_INSTT_CODE = #{bsisInsttCode}
						)
					</if>
					<if test="@egovframework.MybatisUtils@isNotEmpty(srchSmTxt)">
						AND (
							SM.SYS_NM LIKE '%'|| #{srchSmTxt} ||'%'
							OR SM.SYS_TY LIKE '%'|| #{srchSmTxt} ||'%'
						)
					</if>
				ORDER BY IT.INSTT_CODE, IT.INSTT_LEVEL DESC
			) PO
		) PL
		WHERE
		<![CDATA[
			RSN <= #{maxSn}
			AND RSN > #{minSn}
		]]>
	</select>

	<!-- 식당현황 목록 (페이징 전체 카운트) -->
	<select id="selectFoodRestListPagingCount" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TAD_FM_FOODMENU_REST A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			<if test="@egovframework.MybatisUtils@isNotEmpty(srchRsTxt)">
				AND A.REST_NM LIKE '%'|| #{srchRsTxt} ||'%'
			</if>
	</select>

	<!-- 식당현황 목록 페이징 리스트  -->
	<select id="selectFoodRestListPaging" parameterType="map" resultType="egovMap">
		SELECT
			PL.*
		FROM (
			SELECT
				PO.*
				, ROWNUM AS RSN
			FROM (
				SELECT
					A.REST_SEQ
					, A.REST_NM
					, A.AUTH_CD
					, A.SORT
					, A.REG_ID
					, TO_CHAR(TO_DATE(A.REG_DT, 'YYYY-MM-DD'),'YYYY-MM-DD') AS REG_DT
					, A.MOD_ID
					, A.MOD_DT
				FROM
					TAD_FM_FOODMENU_REST A
				WHERE A.USE_AT = 'Y'
					AND A.SYS_ID = #{sysId}
					<if test="@egovframework.MybatisUtils@isNotEmpty(srchRsTxt)">
						AND A.REST_NM LIKE '%'|| #{srchRsTxt} ||'%'
					</if>
				ORDER BY A.SORT ASC, A.REG_DT ASC
			) PO
		) PL
		WHERE
		<![CDATA[
			RSN <= #{maxSn}
			AND RSN > #{minSn}
		]]>
	</select>

	<!-- 식당정보 데이터 조회 -->
	<select id="selectFoodRestData" parameterType="map" resultType="egovMap">
		SELECT
			A.REST_SEQ
			, A.SYS_ID
			, A.REST_NM
			, A.AUTH_CD
			, A.SORT
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
		FROM
			TAD_FM_FOODMENU_REST A
		WHERE
			A.REST_SEQ = #{restSeq}
	</select>

	<!-- 식당정보 목록 조회 -->
	<select id="selectFoodRestList" parameterType="map" resultType="egovMap">
		SELECT
			A.REST_SEQ
			, A.SYS_ID
			, A.REST_NM
			, A.AUTH_CD
			, A.SORT
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
		FROM
			TAD_FM_FOODMENU_REST A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
		ORDER BY A.SORT ASC, A.REG_DT ASC
	</select>

	<!-- 식당정보 등록 -->
	<insert id="insertFoodRestData" parameterType="map">
		INSERT INTO TAD_FM_FOODMENU_REST(
			REST_SEQ
			, SYS_ID
			, REST_NM
			, AUTH_CD
			, SORT
			, REG_ID
			, REG_DT
			, MOD_ID
			, MOD_DT
			, USE_AT
		) VALUES (
			NEXTVAL(SEQ_FM_REST_SN)
			, #{sysId}
			, #{restNm}
			, NULLIF(#{authCd}, '')
			, NULLIF(#{sort}, '')
			, #{mberId}
			, SYSDATE
			, #{mberId}
			, SYSDATE
			, 'Y'
		)
	</insert>

	<!-- 식당정보 수정 -->
	<update id="updateFoodRestData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_REST
		SET
			REST_NM		= #{restNm}
			, AUTH_CD	= NULLIF(#{authCd}, '')
			, SORT		= NULLIF(#{sort}, '')
			, MOD_ID	= #{mberId}
			, MOD_DT	= SYSDATE
		WHERE
			REST_SEQ = #{restSeq}
	</update>

	<!-- 식당정보 삭제 -->
	<update id="deleteFoodRestData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_REST
		SET
			USE_AT		= 'N'
			, MOD_ID	= #{mberId}
			, MOD_DT	= SYSDATE
		WHERE
			REST_SEQ = #{restSeq}
	</update>
	<!-- 식당관리 E -->

	<!-- 식단구분 관리 S -->
	<!-- 식단구분 관리 식당현황 목록 (페이징 전체 카운트) -->
	<select id="selectFoodTypeRsListPagingCount" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TAD_FM_FOODMENU_REST A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			<if test="@egovframework.MybatisUtils@isNotEmpty(authCdList)">
				AND A.AUTH_CD IN (
					<foreach collection="authCdList" item="authCd" open="" close="" separator=",">
						#{authCd}
					</foreach>
				)
			</if>
			<if test="@egovframework.MybatisUtils@isNotEmpty(srchRsTxt)">
				AND A.REST_NM LIKE '%'|| #{srchRsTxt} ||'%'
			</if>
	</select>

	<!-- 식단구분 관리 식당현황 목록 페이징 리스트  -->
	<select id="selectFoodTypeRsListPaging" parameterType="map" resultType="egovMap">
		SELECT
			PL.*
		FROM (
			SELECT
				PO.*
				, ROWNUM AS RSN
			FROM (
				SELECT
					A.REST_SEQ
					, A.REST_NM
					, A.AUTH_CD
					, A.SORT
					, A.REG_ID
					, TO_CHAR(TO_DATE(A.REG_DT, 'YYYY-MM-DD'),'YYYY-MM-DD') AS REG_DT
					, A.MOD_ID
					, A.MOD_DT
					, (SELECT COUNT(*) FROM TAD_FM_FOODMENU_TY WHERE USE_AT = 'Y' AND SYS_ID = A.SYS_ID AND REST_SEQ = A.REST_SEQ) AS TY_CNT
				FROM
					TAD_FM_FOODMENU_REST A
				WHERE A.USE_AT = 'Y'
					AND A.SYS_ID = #{sysId}
					<if test="@egovframework.MybatisUtils@isNotEmpty(authCdList)">
						AND A.AUTH_CD IN (
							<foreach collection="authCdList" item="authCd" open="" close="" separator=",">
								#{authCd}
							</foreach>
						)
					</if>
					<if test="@egovframework.MybatisUtils@isNotEmpty(srchRsTxt)">
						AND A.REST_NM LIKE '%'|| #{srchRsTxt} ||'%'
					</if>
				ORDER BY A.SORT ASC, A.REG_DT ASC
			) PO
		) PL
		WHERE
		<![CDATA[
			RSN <= #{maxSn}
			AND RSN > #{minSn}
		]]>
	</select>

	<!-- 식단구분 데이터 전체 조회 -->
	<select id="selectFoodTypeAllList" parameterType="map" resultType="egovMap">
		SELECT
			A.FM_TY_SEQ
			, A.TY_NAME
			, A.SORT
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
			, A.FM_TY
		FROM
			TAD_FM_FOODMENU_TY A
		WHERE A.SYS_ID = #{sysId}
		ORDER BY A.SORT ASC, A.REG_DT ASC
	</select>

	<!-- 식단구분 데이터 개수 조회 -->
	<select id="selectFoodTypeAllListCount" parameterType="map" resultType="int">
	SELECT COUNT(*)
	FROM
		TAD_FM_FOODMENU_TY
	WHERE SYS_ID = #{sysId}
	</select>
	<!-- 식단구분 등록 -->
	<insert id="insertFoodTypeData" parameterType="map">
		INSERT INTO TAD_FM_FOODMENU_TY(
			  FM_TY_SEQ
			, SYS_ID
			, TY_NAME
			, SORT
			, REG_ID
			, REG_DT
			, MOD_ID
			, MOD_DT
			, USE_AT
			, FM_TY
		) VALUES (
			  FM_TY_SEQ.NEXTVAL
			, #{sysId}
			, #{tyName}
			, #{sort}
			, #{mberId}
			, SYSDATE
			, #{mberId}
			, SYSDATE
			, 'Y'
			, #{fmTy}
		)
	</insert>

	<!-- 식단 구분 수정 -->
	<update id="updateFoodTypeData">
		UPDATE
			TAD_FM_FOODMENU_TY
		SET
			TY_NAME	= #{tyName}
			,MOD_ID	= #{mberId}
			, MOD_DT = SYSDATE
			, USE_AT = #{useAt}
		WHERE
			FM_TY_SEQ = #{fmTySeq}
	</update>

	<!-- 식단구분 삭제 -->
	<update id="deleteFoodTypeData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_TY
		SET
			USE_AT		= 'N'
			, MOD_ID	= #{mberId}
			, MOD_DT	= SYSDATE
		WHERE
			FM_TY_SEQ = #{fmTySeq}
	</update>
	<!-- 식단구분 관리 E -->

	<!-- 식단관리 S -->
	<!-- 식단구분 관리 식당현황 목록 (페이징 전체 카운트) -->
	<select id="selectFoodMenuRsListPagingCount" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TAD_FM_FOODMENU_REST A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			<if test="@egovframework.MybatisUtils@isNotEmpty(authCdList)">
				AND A.AUTH_CD IN (
					<foreach collection="authCdList" item="authCd" open="" close="" separator=",">
						#{authCd}
					</foreach>
				)
			</if>
			<if test="@egovframework.MybatisUtils@isNotEmpty(srchRsTxt)">
				AND A.REST_NM LIKE '%'|| #{srchRsTxt} ||'%'
			</if>
	</select>

	<!-- 식단구분 관리 식당현황 목록 페이징 리스트  -->
	<select id="selectFoodMenuRsListPaging" parameterType="map" resultType="egovMap">
		SELECT
			PL.*
		FROM (
			SELECT
				PO.*
				, ROWNUM AS RSN
			FROM (
				SELECT
					A.REST_SEQ
					, A.REST_NM
					, A.AUTH_CD
					, A.SORT
					, A.REG_ID
					, TO_CHAR(TO_DATE(A.REG_DT,'YYYY-MM-DD'),'YYYY-MM-DD') AS REG_DT
					, A.MOD_ID
					, A.MOD_DT
					, (SELECT COUNT(*) FROM TAD_FM_FOODMENU_PLAN WHERE USE_AT = 'Y' AND REST_SEQ = A.REST_SEQ) AS PLAN_CNT
				FROM
					TAD_FM_FOODMENU_REST A
				WHERE A.USE_AT = 'Y'
					AND A.SYS_ID = #{sysId}
					<if test="@egovframework.MybatisUtils@isNotEmpty(authCdList)">
						AND A.AUTH_CD IN (
							<foreach collection="authCdList" item="authCd" open="" close="" separator=",">
								#{authCd}
							</foreach>
						)
					</if>
					<if test="@egovframework.MybatisUtils@isNotEmpty(srchRsTxt)">
						AND A.REST_NM LIKE '%'|| #{srchRsTxt} ||'%'
					</if>
				ORDER BY A.SORT ASC, A.REG_DT ASC
			) PO
		) PL
		WHERE
		<![CDATA[
			RSN <= #{maxSn}
			AND RSN > #{minSn}
		]]>
	</select>

	<!-- 식단관리 - 식당정보 데이터 조회 -->
	<select id="selectFoodMenuRsData" parameterType="map" resultType="egovMap">
		SELECT
			A.REST_SEQ
			, A.SYS_ID
			, A.REST_NM
			, A.AUTH_CD
			, A.SORT
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
		FROM
			TAD_FM_FOODMENU_REST A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			AND A.REST_SEQ = #{restSeq}
	</select>

	<!-- 식단관리 - 안내정보 조회 -->
	<select id="selectFoodMenuInfoData" parameterType="map" resultType="egovMap">
		SELECT FM.* FROM (
			SELECT FL.*, ROWNUM AS RSN FROM (
				SELECT
					  A.INFO_SEQ
					, A.SYS_ID
					, A.CONT_INFO
					, A.CONT_ORIGIN
					, A.COST
					, A.TEL
					, TO_CHAR(TO_DATE(A.FM_ST_DT,'YYYY-MM-DD'),'YYYY-MM-DD') AS FM_ST_DT
					, TO_CHAR(TO_DATE(A.FM_ED_DT,'YYYY-MM-DD'),'YYYY-MM-DD') AS FM_ED_DT
					, TO_CHAR(TO_DATE(A.FM_ST_DT,'YYYY-MM-DD'),'YYYY"년"MM"월"DD"일"') AS FM_ST_DT_KR
					, TO_CHAR(TO_DATE(A.FM_ED_DT,'YYYY-MM-DD'),'YYYY"년"MM"월"DD"일"') AS FM_ED_DT_KR
					, A.FM_TIME
					, A.REG_ID
					, A.REG_DT
					, A.MOD_ID
					, A.MOD_DT
					, A.USE_AT
				FROM
					TAD_FM_FOODMENU_INFO A
				WHERE A.USE_AT = 'Y'
				AND A.SYS_ID = #{sysId}
				<choose>
					<when test='schInfoType.equals("UP")'>
						AND TO_CHAR(TO_DATE(A.FM_ST_DT,'YYYY-MM-DD'),'YYYY-MM-DD') <![CDATA[>=]]> TO_CHAR(TO_DATE(#{schStDt},'YYYY-MM-DD'),'YYYY-MM-DD')
						AND TO_CHAR(TO_DATE(A.FM_ED_DT,'YYYY-MM-DD'),'YYYY-MM-DD') <![CDATA[<=]]> TO_CHAR(TO_DATE(#{schEdDt},'YYYY-MM-DD'),'YYYY-MM-DD')
						ORDER BY A.FM_ST_DT ASC, A.FM_ED_DT ASC, A.REG_DT DESC
					</when>
					<otherwise>
						AND TO_CHAR(TO_DATE(A.FM_ST_DT,'YYYY-MM-DD'),'YYYY-MM-DD') <![CDATA[>=]]> TO_CHAR(TO_DATE(#{schStDt},'YYYY-MM-DD'),'YYYY-MM-DD')
						AND TO_CHAR(TO_DATE(A.FM_ED_DT,'YYYY-MM-DD'),'YYYY-MM-DD') <![CDATA[<=]]> TO_CHAR(TO_DATE(#{schEdDt},'YYYY-MM-DD'),'YYYY-MM-DD')
						ORDER BY A.FM_ST_DT DESC, A.FM_ED_DT DESC, A.REG_DT DESC
					</otherwise>
				</choose>
			) FL
		) FM
		WHERE
		<![CDATA[
			RSN = 1
		]]>
	</select>


	<!-- 식단 상세보기 데이터 조회 -->
	<select id="selectFoodMenuPlanData" parameterType="map" resultType="egovMap">
		SELECT A.*
		FROM
			TAD_FM_FOODMENU_PLAN A
		WHERE FM_SEQ = #{fmSeq}
	</select>

	<!-- 식단관리 - 안내정보 급식 일자 건수 카운트 -->
	<select id="selectFoodMenuInfoDtCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TAD_FM_FOODMENU_INFO A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			AND TO_CHAR(TO_DATE(A.FM_ST_DT,'YYYY-MM-DD'),'YYYY-MM-DD') = TO_CHAR(TO_DATE(#{schStDt},'YYYY-MM-DD'),'YYYY-MM-DD')
			AND TO_CHAR(TO_DATE(A.FM_ED_DT,'YYYY-MM-DD'),'YYYY-MM-DD') = TO_CHAR(TO_DATE(#{schEdDt},'YYYY-MM-DD'),'YYYY-MM-DD')
	</select>

	<!-- 식단관리 - 안내정보 급식일자 기간 이하에 데이터 건수 조회 -->
	<select id="selectFoodMenuInfoDtDwChkCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TAD_FM_FOODMENU_INFO A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			AND (TO_CHAR(TO_DATE(A.FM_ST_DT,'YYYY-MM-DD'),'YYYY-MM-DD') <![CDATA[<=]]> TO_CHAR(TO_DATE(#{schStDt},'YYYY-MM-DD'),'YYYY-MM-DD'))
			AND (TO_CHAR(TO_DATE(A.FM_ED_DT,'YYYY-MM-DD'),'YYYY-MM-DD') <![CDATA[<=]]> TO_CHAR(TO_DATE(#{schEdDt},'YYYY-MM-DD'),'YYYY-MM-DD'))
	</select>

	<!-- 식단관리 목록 조회 -->
	<select id="selectFoodMenuPlanList" parameterType="map" resultType="egovMap">
		SELECT
			A.FM_SEQ
			, A.SYS_ID
			, A.FM_TY_SEQ
			, TO_CHAR(TO_DATE(A.FM_DT,'YYYY-MM-DD'),'YYYY-MM-DD') AS FM_DT
			, A.FM_TITLE
			, A.FM_CN
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
		FROM
			TAD_FM_FOODMENU_PLAN A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			AND TO_CHAR(TO_DATE(A.FM_DT,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN TO_CHAR(TO_DATE(#{schStDt},'YYYY-MM-DD'),'YYYY-MM-DD') AND TO_CHAR(TO_DATE(#{schEdDt},'YYYY-MM-DD'),'YYYY-MM-DD')
		ORDER BY A.FM_TY_SEQ ASC, A.FM_DT ASC, A.REG_DT ASC
	</select>

	<!-- 식단관리 해당 일자 전체 목록 조회 -->
	<select id="selectFoodMenuPlanDtAllList" parameterType="map" resultType="egovMap">
		SELECT
			A.FM_SEQ
			, A.SYS_ID
			, A.REST_SEQ
			, A.FM_TY_SEQ
			, TO_CHAR(TO_DATE(A.FM_DT,'YYYY-MM-DD'),'YYYY-MM-DD') AS FM_DT
			, A.FM_TITLE
			, A.FM_CN
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
		FROM
			TAD_FM_FOODMENU_PLAN A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
			AND TO_CHAR(TO_DATE(A.FM_DT,'YYYY-MM-DD'),'YYYY-MM-DD') = TO_CHAR(TO_DATE(#{schDt},'YYYY-MM-DD'),'YYYY-MM-DD')
		ORDER BY A.FM_TY_SEQ ASC, A.FM_DT ASC, A.REG_DT ASC
	</select>

	<!-- 식단관리 식단구분 데이터 조회 -->
	<select id="selectFoodMenuTypeList" parameterType="map" resultType="egovMap">
		SELECT
			A.FM_TY_SEQ
			, A.TY_NAME
			, A.SORT
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
			, A.FM_TY
		FROM
			TAD_FM_FOODMENU_TY A
		WHERE A.USE_AT = 'Y'
			AND A.SYS_ID = #{sysId}
		ORDER BY A.SORT ASC, A.REG_DT ASC
	</select>

	<!-- 식단관리 식단구분 데이터 전체 조회 -->
	<select id="selectFoodMenuTypeAllList" parameterType="map" resultType="egovMap">
		SELECT
			A.FM_TY_SEQ
			, A.TY_NAME
			, A.SORT
			, A.REG_ID
			, A.REG_DT
			, A.MOD_ID
			, A.MOD_DT
			, A.USE_AT
			, A.FM_TY
		FROM
			TAD_FM_FOODMENU_TY A
		WHERE A.SYS_ID = #{sysId}
		ORDER BY A.SORT ASC, A.REG_DT ASC
	</select>

	<!-- 해당 주의 요일별 일자 조회 -->
	<select id="selectFoodMenuWeekDayData" parameterType="map" resultType="egovMap">
		SELECT
		 	 TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') - 1, 'YYYY-MM-DD') AS SUN
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + 0, 'YYYY-MM-DD') AS MON
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + 1, 'YYYY-MM-DD') AS TUE
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + 2, 'YYYY-MM-DD') AS WED
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + 3, 'YYYY-MM-DD') AS THU
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + 4, 'YYYY-MM-DD') AS FRI
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + 5, 'YYYY-MM-DD') AS SAT
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') - 7, 'YYYY-MM-DD') AS PREV_DT
		 	,TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + 7, 'YYYY-MM-DD') AS NEXT_DT
	   FROM DUAL
	</select>

	<!-- 식단 안내정보 등록 -->
	<insert id="insertFoodMenuInfoData" parameterType="map">
		INSERT INTO TAD_FM_FOODMENU_INFO (
			INFO_SEQ
			, SYS_ID
			, CONT_INFO
			, CONT_ORIGIN
			, COST
			, TEL
			, FM_ST_DT
			, FM_ED_DT
			, FM_TIME
			, REG_ID
			, REG_DT
			, MOD_ID
			, MOD_DT
			, USE_AT
		) VALUES (
			INFO_SEQ.NEXTVAL
			, #{sysId}
			, #{contInfo}
			, #{contOrigin}
			, #{cost}
			, #{tel}
			, #{fmStDt}
			, #{fmEdDt}
			, #{fmTime}
			, #{mberId}
			, SYSDATE
			, #{mberId}
			, SYSDATE
			, 'Y'
		)
	</insert>

	<!-- 식단 안내정보 수정 -->
	<update id="updateFoodMenuInfoData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_INFO
		SET
			CONT_INFO		= #{contInfo}
			, CONT_ORIGIN	= #{contOrigin}
			, COST			= #{cost}
			, TEL			= #{tel}
			, FM_ST_DT		= #{fmStDt}
			, FM_ED_DT		= #{fmEdDt}
			, FM_TIME		= #{fmTime}
			, MOD_ID		= #{mberId}
			, MOD_DT		= SYSDATE
		WHERE
			INFO_SEQ = #{infoSeq}
	</update>

	<!-- 식단 이미지 추가 -->
	<update id="updateFoodMenuImageData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_PLAN
		SET
			FMCN_IMAGE_PATH		= #{fmcnImagePath}
		WHERE
			FM_SEQ = #{fmSeq}
	</update>

	<!-- 식단 이미지 삭제 -->
	<update id="deleteFoodMenuImageData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_PLAN
		SET
			FMCN_IMAGE_PATH = ''
		WHERE
			FM_SEQ = #{fmSeq}
	</update>

	<!-- 식단등록 -->
	<insert id="insertFoodMenuPlanData" parameterType="map">
		INSERT INTO TAD_FM_FOODMENU_PLAN (
			FM_SEQ
			, SYS_ID
			, FM_TY_SEQ
			, FM_DT
			, FM_TITLE
			, FM_CN
			, REG_ID
			, REG_DT
			, MOD_ID
			, MOD_DT
			, USE_AT
		) VALUES (
			FM_SEQ.NEXTVAL
			, #{sysId}
			, #{fmTySeq}
			, #{fmDt}
			, #{fmTitle}
			, #{fmCn}
			, #{mberId}
			, SYSDATE
			, #{mberId}
			, SYSDATE
			, 'Y'
		)
	</insert>

	<!-- 식단수정 -->
	<update id="updateFoodMenuPlanData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_PLAN
		SET
			FM_TITLE	= #{fmTitle}
			, FM_CN		= #{fmCn}
			, MOD_ID	= #{mberId}
			, MOD_DT	= SYSDATE
		WHERE
			FM_SEQ = #{fmSeq}
	</update>

	<!--  식단 삭제 -->
	<!-- <update id="deleteFoodMenuPlanData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_PLAN
		SET
			USE_AT		= 'N'
			, MOD_ID	= #{mberId}
			, MOD_DT	= NOW()
		WHERE
			FM_SEQ = #{fmSeq}
	</update> -->

	<!-- 엑셀일괄업로드시에, 엑셀에 등록된 기존 날짜데이터 삭제처리 -->
	<update id="deleteFoodMenuPlanData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_PLAN
		SET
			USE_AT		= 'N'
			, MOD_ID	= #{mberId}
			, MOD_DT	= SYSDATE
		WHERE
			SYS_ID = #{sysId}
		AND
			FM_DT = #{fmDt}
		AND
			FM_TY_SEQ = #{fmTySeq}
	</update>


	<!-- 나이스연계 등록시에 선택한 월 삭제 진행 -->
	<update id="deleteFoodMenuPlanNeisData" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_PLAN
		SET
			  USE_AT	= 'N'
			, MOD_ID	= #{mberId}
			, MOD_DT	= SYSDATE
		WHERE
			SYS_ID = #{sysId}
		AND
			FM_DT BETWEEN TO_CHAR(TO_DATE(#{stDelDate},'YYYY-MM-DD'),'YYYY-MM-DD') AND TO_CHAR(TO_DATE(#{edDelDate},'YYYY-MM-DD'),'YYYY-MM-DD')
	</update>

	<!-- 칼로리 표기여부 조회 -->
	<select id="selectKcalSttus" parameterType="map" resultType="egovMap">
		SELECT
			FOOD_KCAL_AT AS KCAL_AT
		FROM
			TAD_FM_FOODMENU_KCAL
		WHERE
			SYS_ID = #{sysId}
	</select>

	<!-- 칼로리 표기여부 수정 -->
	<update id="updateKcalSttus" parameterType="map">
		UPDATE
			TAD_FM_FOODMENU_KCAL
		SET
			FOOD_KCAL_AT = #{kcalAt}
		WHERE
			SYS_ID = #{sysId}
	</update>
</mapper>